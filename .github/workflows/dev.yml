name: analyze and test dev
on: 
  push:
    branches:
      - development
  pull_request:
    branches:
      - development
    types:
      - closed
  workflow_dispatch:
  schedule:
  - cron: '00 12 * * */2'
  
jobs:
  static_analysis:
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
      
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: none
          - language: javascript-typescript
            build-mode: none
    runs-on: ubuntu-24.04
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: development
      - name: codeql_init
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
      - name: codeql_analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
  test:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: development
      - name: setup_java
        uses: actions/setup-java@v4.7.0
        with:
          java-version: '21'
          java-package: 'jdk'
          distribution: 'temurin'
      - name: setup_db
        env:
          PGPASSWORD: postgres
        run: |
          sudo apt-get install -y postgresql-client
          psql -U postgres -h localhost -d postgres -f $GITHUB_WORKSPACE/existing-database.sql
          
      - name: test 
        if: ${{success()}}
        env: 
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          SPRING_PORT: 8080
        run: |
          
          cd $GITHUB_WORKSPACE
          cd recruitment-backend/
          ./mvnw test
